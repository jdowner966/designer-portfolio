document.addEventListener("DOMContentLoaded", function () {

const themeToggle = document.getElementById("themeToggle");

  const storedTheme = localStorage.getItem("selectedTheme");

    if (storedTheme) {
        // Check the correct radio button
        const themeRadio = document.querySelector(`#themeToggle input[value="${storedTheme}"]`);
        if (themeRadio) {
            themeRadio.checked = true;
        }

        // Apply theme class
        if (storedTheme === "red") {
            document.documentElement.classList.add("redTheme");
        } else {
            document.documentElement.classList.remove("redTheme");
        }
    }

function getSelectedTheme() {
    const selectedTheme = document.querySelector('#themeToggle input[name="theme"]:checked');
    return selectedTheme ? selectedTheme.value : null;
  }

  

 document.querySelectorAll('#themeToggle input[name="theme"]').forEach(radio => {
    radio.addEventListener('change', () => {

        console.log("Selected theme:", getSelectedTheme());

        const theme = getSelectedTheme();
    console.log("Selected theme:", theme);

    localStorage.setItem("selectedTheme", theme);

    
        
        if (getSelectedTheme() === "red") {
            document.documentElement.classList.add("redTheme")
        } else {
            document.documentElement.classList.remove("redTheme")
        }
    

    });

    
  });

const navBar = document.getElementById('navBar');
const navBarLinks = navBar.getElementsByTagName('a');

function linkAnimation(event) {
    const link = event.currentTarget;
    
    if (getSelectedTheme() === "red") {
            link.style.animationName = "redLinkRotation"
        } else {
            link.style.animationName = "linkRotation"
        };

    link.style.animationDuration = "1s";
    link.style.animationIterationCount = "1";
    link.style.animationFillMode = "forwards";
}

function reverseLinkAnimation(event) {
    const link = event.currentTarget;

    if (getSelectedTheme() === "red") {
            link.style.animationName = "redLinkRotationOut"
        } else {
            link.style.animationName = "linkRotationOut"
        };

    link.style.animationDuration = "1s";
    link.style.animationIterationCount = "1";
}

for (let link of navBarLinks) {
    link.addEventListener("mouseout", reverseLinkAnimation);
    link.addEventListener("mouseover", linkAnimation);
}


/* themeToggle.addEventListener("click", function () {
        document.documentElement.classList.toggle("dark-mode");

        if (document.documentElement.classList.contains("redTheme")) {
            localStorage.setItem("darkMode", "enabled");
            darkModeToggle.classList.replace("fa-moon-o", "fa-sun-o");
        
        } else {
            localStorage.setItem("darkMode", "disabled");
        }
    }); */

});